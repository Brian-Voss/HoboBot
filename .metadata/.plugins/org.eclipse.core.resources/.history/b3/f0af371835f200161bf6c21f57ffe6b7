/**
 * 
 */
package com.odin.commands.mentor;

import java.util.ArrayList;

import com.odin.commands.Commands;
import com.odin.helpers.FileHelper;

import net.dv8tion.jda.core.events.message.MessageReceivedEvent;

/**
 * @author Brian
 *
 */
public class ListMentorsCommand extends Commands {

	/* (non-Javadoc)
	 * @see com.odin.commands.Commands#called(java.lang.String[], net.dv8tion.jda.core.events.message.MessageReceivedEvent)
	 */
	@Override
	public boolean called(String[] args, MessageReceivedEvent event) {
		// TODO Auto-generated method stub
		return true;
	}

	/* (non-Javadoc)
	 * @see com.odin.commands.Commands#help()
	 */
	@Override
	public String help() {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.odin.commands.Commands#action(java.lang.String[], net.dv8tion.jda.core.events.message.MessageReceivedEvent)
	 */
	@Override
	public void action(String[] args, MessageReceivedEvent event) {
		FileHelper helper = new FileHelper();
		ArrayList<String> mentors = helper.getMentorFile();
		if(mentors.size() == 0)
		{
			
			event.getTextChannel().sendMessage("No Mentors have signed up").queue();
		}
		else
		{
			boolean foundMentor = false;
			for(String mentor : mentors)
			{
				if(args[0] == null || args[0] == "")
				{
					event.getTextChannel().sendMessage(mentor).queue();
					foundMentor = true;
				}
				else if(mentor.contains(args[0]))
				{
					event.getTextChannel().sendMessage(mentor).queue();
					foundMentor = true;
				}
			}
			if(!foundMentor)
			{
				event.getTextChannel().sendMessage("No Mentors have signed up for : " +args[0]).queue();
			}
		}
	}

}
